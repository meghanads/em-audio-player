Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                              FAT32.o (__mulsi3)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              FAT32.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              FAT32.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              FAT32.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
                              UART_routines.o (fdevopen)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o) (__iob)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(printf.o)
                              SD_routines.o (printf)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(vfprintf_std.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(printf.o) (vfprintf)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o) (calloc)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o) (malloc)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strnlen_P.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(vfprintf_std.o) (strnlen_P)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o) (memset)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strnlen.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(vfprintf_std.o) (strnlen)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fputc.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(vfprintf_std.o) (fputc)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ultoa_invert.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(vfprintf_std.o) (__ultoa_invert)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_prologue.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(printf.o) (__prologue_saves__)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_epilogue.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(printf.o) (__epilogue_restores__)

Allocating common symbols
Common symbol       size              file

appendFileLocation  0x4               FAT32.o
firstDataSector     0x4               FAT32.o
fileSize            0x4               FAT32.o
bytesPerSector      0x2               FAT32.o
totalClusters       0x4               FAT32.o
rootCluster         0x4               FAT32.o
__brkval            0x2               c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
sample_count        0x2               FAT32.o
startBlock          0x4               FAT32.o
buffer              0x200             FAT32.o
sectorPerCluster    0x2               FAT32.o
unusedSectors       0x4               FAT32.o
SDHC_flag           0x1               FAT32.o
totalBlocks         0x4               FAT32.o
reservedSectorCount
                    0x2               FAT32.o
appendStartCluster  0x4               FAT32.o
cardType            0x1               FAT32.o
__flp               0x2               c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
freeClusterCountUpdated
                    0x1               FAT32.o
__iob               0x6               c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
appendFileSector    0x4               FAT32.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD FAT32.o
LOAD SD_main.o
LOAD SD_routines.o
LOAD SPI_routines.o
LOAD UART_routines.o
LOAD PWM_routines.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x4b50
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000054     0x1bfd FAT32.o
                0x00000054                pcm_samples
 .progmem.data  0x00001c51      0x317 SD_main.o
                0x00001f68                . = ALIGN (0x2)
                0x00001f68                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00001f68        0x0 linker stubs
 *(.trampolines*)
                0x00001f68                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00001f68                __ctors_start = .
 *(.ctors)
                0x00001f68                __ctors_end = .
                0x00001f68                __dtors_start = .
 *(.dtors)
                0x00001f68                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00001f68        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00001f68                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00001f68        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00001f74       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00001f74                __do_copy_data
 .init4         0x00001f8a       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00001f8a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00001f9a        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00001fa2        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00001fa2                __vector_1
                0x00001fa2                __vector_12
                0x00001fa2                __bad_interrupt
                0x00001fa2                __vector_6
                0x00001fa2                __vector_3
                0x00001fa2                __vector_11
                0x00001fa2                __vector_13
                0x00001fa2                __vector_17
                0x00001fa2                __vector_19
                0x00001fa2                __vector_7
                0x00001fa2                __vector_5
                0x00001fa2                __vector_4
                0x00001fa2                __vector_9
                0x00001fa2                __vector_2
                0x00001fa2                __vector_15
                0x00001fa2                __vector_8
                0x00001fa2                __vector_14
                0x00001fa2                __vector_10
                0x00001fa2                __vector_16
                0x00001fa2                __vector_18
                0x00001fa2                __vector_20
 .text          0x00001fa6     0x1744 FAT32.o
                0x000028de                getSetNextCluster
                0x00002dce                readFile
                0x000024b2                memoryStatistics
                0x000020be                convertFileName
                0x000022e2                getSetFreeCluster
                0x00002db2                deleteFile
                0x000021ce                searchNextFreeCluster
                0x00002f76                writeFile
                0x000023f0                freeMemoryUpdate
                0x00002712                getBootSectorData
                0x000029d8                findFiles
                0x00001fa6                getFirstSector
                0x00001ff0                displayMemory
 .text          0x000036ea      0x66a SD_main.o
                0x000036ea                port_init
                0x00003704                init_devices
                0x0000371e                main
 .text          0x00003d54      0x3cc SD_routines.o
                0x00003e2c                SD_erase
                0x00003e92                SD_writeSingleBlock
                0x00003d54                SD_sendCommand
                0x00003f2e                SD_readSingleBlock
                0x00003f90                SD_init
 .text          0x00004120       0x1e SPI_routines.o
                0x00004128                SPI_transmit
                0x00004120                spi_init
                0x00004132                SPI_receive
 .text          0x0000413e       0xfa UART_routines.o
                0x00004148                transmitByte
                0x00004150                transmitString_F
                0x00004178                transmitHex
                0x0000420c                rcv_uart
                0x00004218                uart0_init
                0x00004164                transmitString
                0x00004200                xmit_uart
                0x0000413e                receiveByte
 .text          0x00004238       0x18 PWM_routines.o
                0x00004238                init_pwm
                0x0000424a                send_pwm
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(printf.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(vfprintf_std.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strnlen_P.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strnlen.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fputc.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ultoa_invert.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_prologue.o)
 .text          0x00004250        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_epilogue.o)
                0x00004250                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00004250       0x3e c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                0x00004250                __mulsi3
 .text.libgcc   0x0000428e       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x0000428e                __udivmodsi4
 .text.libgcc   0x000042d2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000042d2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000042d2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000042d2       0x98 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
                0x000042d2                fdevopen
 .text.avr-libc
                0x0000436a       0x2a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(printf.o)
                0x0000436a                printf
 .text.avr-libc
                0x00004394      0x3ba c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(vfprintf_std.o)
                0x00004394                vfprintf
 .text.avr-libc
                0x0000474e       0x38 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
                0x0000474e                calloc
 .text.avr-libc
                0x00004786      0x20a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x00004786                malloc
                0x000048e0                free
 .text.avr-libc
                0x00004990       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strnlen_P.o)
                0x00004990                strnlen_P
 .text.avr-libc
                0x000049a6        0xe c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                0x000049a6                memset
 .text.avr-libc
                0x000049b4       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strnlen.o)
                0x000049b4                strnlen
 .text.avr-libc
                0x000049ca       0x58 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fputc.o)
                0x000049ca                fputc
 .text.avr-libc
                0x00004a22       0xbc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ultoa_invert.o)
                0x00004a22                __ultoa_invert
 .text.libgcc   0x00004ade       0x38 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_prologue.o)
                0x00004ade                __prologue_saves__
 .text.libgcc   0x00004b16       0x36 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_epilogue.o)
                0x00004b16                __epilogue_restores__
                0x00004b4c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00004b4c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00004b4c                exit
                0x00004b4c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00004b4c        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00004b50                _etext = .

.data           0x00800060       0x5a load address 0x00004b50
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060       0x18 FAT32.o
                0x00800074                pcm_length
 .data          0x00800078        0x0 SD_main.o
 .data          0x00800078       0x30 SD_routines.o
 .data          0x008000a8        0x0 SPI_routines.o
 .data          0x008000a8        0xb UART_routines.o
 .data          0x008000b3        0x0 PWM_routines.o
 .data          0x008000b3        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .data          0x008000b3        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x008000b3        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x008000b3        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x008000b3        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x008000b3        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
 .data          0x008000b3        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
 .data          0x008000b3        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(printf.o)
 .data          0x008000b3        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(vfprintf_std.o)
 .data          0x008000b3        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
 .data          0x008000b3        0x6 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x008000b5                __malloc_heap_start
                0x008000b7                __malloc_heap_end
                0x008000b3                __malloc_margin
 .data          0x008000b9        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strnlen_P.o)
 .data          0x008000b9        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .data          0x008000b9        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strnlen.o)
 .data          0x008000b9        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fputc.o)
 .data          0x008000b9        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ultoa_invert.o)
 .data          0x008000b9        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_prologue.o)
 .data          0x008000b9        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_epilogue.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000ba                . = ALIGN (0x2)
 *fill*         0x008000b9        0x1 00
                0x008000ba                _edata = .
                0x008000ba                PROVIDE (__data_end, .)

.bss            0x008000ba      0x23d
                0x008000ba                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x008000ba        0x0 FAT32.o
 .bss           0x008000ba        0x0 SD_main.o
 .bss           0x008000ba        0x0 SD_routines.o
 .bss           0x008000ba        0x0 SPI_routines.o
 .bss           0x008000ba        0x0 UART_routines.o
 .bss           0x008000ba        0x0 PWM_routines.o
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(printf.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(vfprintf_std.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strnlen_P.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strnlen.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fputc.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ultoa_invert.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_prologue.o)
 .bss           0x008000ba        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_epilogue.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008000ba      0x233 FAT32.o
                0x008000ba                appendFileLocation
                0x008000be                firstDataSector
                0x008000c2                fileSize
                0x008000c6                bytesPerSector
                0x008000c8                totalClusters
                0x008000cc                rootCluster
                0x008000d0                sample_count
                0x008000d2                startBlock
                0x008000d6                buffer
                0x008002d6                sectorPerCluster
                0x008002d8                unusedSectors
                0x008002dc                SDHC_flag
                0x008002dd                totalBlocks
                0x008002e1                reservedSectorCount
                0x008002e3                appendStartCluster
                0x008002e7                cardType
                0x008002e8                freeClusterCountUpdated
                0x008002e9                appendFileSector
 COMMON         0x008002ed        0x6 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
                0x008002ed                __iob
 COMMON         0x008002f3        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x008002f3                __brkval
                0x008002f5                __flp
                0x008002f7                PROVIDE (__bss_end, .)
                0x00004b50                __data_load_start = LOADADDR (.data)
                0x00004baa                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002f7        0x0
                0x008002f7                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002f7                PROVIDE (__noinit_end, .)
                0x008002f7                _end = .
                0x008002f7                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xc0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 FAT32.o
 .debug_aranges
                0x00000020       0x20 SD_main.o
 .debug_aranges
                0x00000040       0x20 SD_routines.o
 .debug_aranges
                0x00000060       0x20 SPI_routines.o
 .debug_aranges
                0x00000080       0x20 UART_routines.o
 .debug_aranges
                0x000000a0       0x20 PWM_routines.o

.debug_pubnames
                0x00000000      0x5a9
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x272 FAT32.o
 .debug_pubnames
                0x00000272      0x184 SD_main.o
 .debug_pubnames
                0x000003f6       0xb2 SD_routines.o
 .debug_pubnames
                0x000004a8       0x40 SPI_routines.o
 .debug_pubnames
                0x000004e8       0x95 UART_routines.o
 .debug_pubnames
                0x0000057d       0x2c PWM_routines.o

.debug_info     0x00000000     0x1f0d
 *(.debug_info)
 .debug_info    0x00000000     0x1066 FAT32.o
 .debug_info    0x00001066      0x73f SD_main.o
 .debug_info    0x000017a5      0x290 SD_routines.o
 .debug_info    0x00001a35       0xc6 SPI_routines.o
 .debug_info    0x00001afb      0x37c UART_routines.o
 .debug_info    0x00001e77       0x96 PWM_routines.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x72d
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x238 FAT32.o
 .debug_abbrev  0x00000238      0x16c SD_main.o
 .debug_abbrev  0x000003a4       0xbf SD_routines.o
 .debug_abbrev  0x00000463       0x8d SPI_routines.o
 .debug_abbrev  0x000004f0      0x1da UART_routines.o
 .debug_abbrev  0x000006ca       0x63 PWM_routines.o

.debug_line     0x00000000     0x190f
 *(.debug_line)
 .debug_line    0x00000000      0xb97 FAT32.o
 .debug_line    0x00000b97      0x614 SD_main.o
 .debug_line    0x000011ab      0x3d1 SD_routines.o
 .debug_line    0x0000157c       0xc3 SPI_routines.o
 .debug_line    0x0000163f      0x235 UART_routines.o
 .debug_line    0x00001874       0x9b PWM_routines.o

.debug_frame    0x00000000      0x280
 *(.debug_frame)
 .debug_frame   0x00000000       0xe0 FAT32.o
 .debug_frame   0x000000e0       0x40 SD_main.o
 .debug_frame   0x00000120       0x60 SD_routines.o
 .debug_frame   0x00000180       0x40 SPI_routines.o
 .debug_frame   0x000001c0       0x90 UART_routines.o
 .debug_frame   0x00000250       0x30 PWM_routines.o

.debug_str      0x00000000      0x8cc
 *(.debug_str)
 .debug_str     0x00000000      0x6fd FAT32.o
                                0x749 (size before relaxing)
 .debug_str     0x000006fd       0x3d SD_main.o
                                0x23d (size before relaxing)
 .debug_str     0x0000073a       0x6c SD_routines.o
                                0x14a (size before relaxing)
 .debug_str     0x000007a6       0x34 SPI_routines.o
                                 0xd4 (size before relaxing)
 .debug_str     0x000007da       0xc9 UART_routines.o
                                0x189 (size before relaxing)
 .debug_str     0x000008a3       0x29 PWM_routines.o
                                 0xc4 (size before relaxing)

.debug_loc      0x00000000     0x15c3
 *(.debug_loc)
 .debug_loc     0x00000000      0xf4d FAT32.o
 .debug_loc     0x00000f4d      0x1df SD_main.o
 .debug_loc     0x0000112c      0x2e7 SD_routines.o
 .debug_loc     0x00001413       0x26 SPI_routines.o
 .debug_loc     0x00001439      0x172 UART_routines.o
 .debug_loc     0x000015ab       0x18 PWM_routines.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SD_Card.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x30
 .debug_ranges  0x00000000       0x30 UART_routines.o
