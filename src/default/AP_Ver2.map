Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                              FAT32.o (__mulsi3)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              FAT32.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
                              UART_routines.o (fdevopen)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o) (__iob)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o) (calloc)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o) (malloc)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o) (memset)

Allocating common symbols
Common symbol       size              file

STOPPED             0x1               main.o
appendFileLocation  0x4               main.o
firstDataSector     0x4               main.o
fileSize            0x4               main.o
bytesPerSector      0x2               main.o
totalClusters       0x4               main.o
rootCluster         0x4               main.o
__brkval            0x2               c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
startBlock          0x4               main.o
buffer              0x200             main.o
sectorPerCluster    0x2               main.o
unusedSectors       0x4               main.o
SDHC_flag           0x1               main.o
totalBlocks         0x4               main.o
reservedSectorCount
                    0x2               main.o
appendStartCluster  0x4               main.o
cardType            0x1               main.o
CURR_FILE           0xb               main.o
__flp               0x2               c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
freeClusterCountUpdated
                    0x1               main.o
__iob               0x6               c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
appendFileSector    0x4               main.o
PLAY_FILE           0xb               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD main.o
LOAD FAT32.o
LOAD LCD_routines.o
LOAD pcm_sample.o
LOAD PWM_routines.o
LOAD SD_routines.o
LOAD SPI_routines.o
LOAD UART_routines.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x40c6
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000054      0x16d FAT32.o
 .progmem.data  0x000001c1     0x1a90 pcm_sample.o
                0x000001c1                pcm_samples
                0x00001c52                . = ALIGN (0x2)
 *fill*         0x00001c51        0x1 00
                0x00001c52                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00001c52        0x0 linker stubs
 *(.trampolines*)
                0x00001c52                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00001c52                __ctors_start = .
 *(.ctors)
                0x00001c52                __ctors_end = .
                0x00001c52                __dtors_start = .
 *(.dtors)
                0x00001c52                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00001c52        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00001c52                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00001c52        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00001c5e       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00001c5e                __do_copy_data
 .init4         0x00001c74       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00001c74                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00001c84        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00001c8c        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00001c8c                __vector_1
                0x00001c8c                __vector_12
                0x00001c8c                __bad_interrupt
                0x00001c8c                __vector_6
                0x00001c8c                __vector_3
                0x00001c8c                __vector_11
                0x00001c8c                __vector_13
                0x00001c8c                __vector_17
                0x00001c8c                __vector_19
                0x00001c8c                __vector_7
                0x00001c8c                __vector_5
                0x00001c8c                __vector_4
                0x00001c8c                __vector_9
                0x00001c8c                __vector_2
                0x00001c8c                __vector_15
                0x00001c8c                __vector_8
                0x00001c8c                __vector_14
                0x00001c8c                __vector_10
                0x00001c8c                __vector_16
                0x00001c8c                __vector_18
                0x00001c8c                __vector_20
 .text          0x00001c90      0x48e main.o
                0x00001caa                LCD_clear
                0x00001c90                init_ports
                0x00001ee2                init_devices
                0x00001ccc                PLAY_SONG
                0x00001ef8                main
 .text          0x0000211e     0x171a FAT32.o
                0x00002a56                getSetNextCluster
                0x00002f46                readFile
                0x0000262a                memoryStatistics
                0x00002236                convertFileName
                0x0000245a                getSetFreeCluster
                0x00002f2a                deleteFile
                0x00002346                searchNextFreeCluster
                0x000030c4                writeFile
                0x00002568                freeMemoryUpdate
                0x0000288a                getBootSectorData
                0x00002b50                findFiles
                0x0000211e                getFirstSector
                0x00002168                displayMemory
 .text          0x00003838       0xb8 LCD_routines.o
                0x00003864                LCD_Cursor
                0x000038c6                LCD_init
                0x000038a0                delay_ms
                0x00003882                LCD_DisplayString_F
                0x0000384e                LCD_WriteData
                0x00003838                LCD_WriteCommand
 .text          0x000038f0        0x0 pcm_sample.o
 .text          0x000038f0       0x18 PWM_routines.o
                0x000038f0                init_pwm
                0x00003902                send_pwm
 .text          0x00003908      0x330 SD_routines.o
                0x000039e0                SD_erase
                0x00003a46                SD_writeSingleBlock
                0x00003908                SD_sendCommand
                0x00003ae2                SD_readSingleBlock
                0x00003b44                SD_init
 .text          0x00003c38       0x1e SPI_routines.o
                0x00003c40                SPI_transmit
                0x00003c38                init_spi
                0x00003c4a                SPI_receive
 .text          0x00003c56      0x102 UART_routines.o
                0x00003c7e                transmitByte
                0x00003d36                init_uart
                0x00003c86                transmitString_F
                0x00003cae                transmitHex
                0x00003c62                rcv_uart
                0x00003c9a                transmitString
                0x00003c56                xmit_uart
                0x00003c74                receiveByte
 .text          0x00003d58        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .text          0x00003d58        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00003d58        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00003d58        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00003d58        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00003d58        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
 .text          0x00003d58        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
 .text          0x00003d58        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
 .text          0x00003d58        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
 .text          0x00003d58        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                0x00003d58                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00003d58       0x3e c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
                0x00003d58                __mulsi3
 .text.libgcc   0x00003d96       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00003d96                __udivmodsi4
 .text.libgcc   0x00003dda        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00003dda        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00003dda        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00003dda       0x98 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
                0x00003dda                fdevopen
 .text.avr-libc
                0x00003e72       0x38 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
                0x00003e72                calloc
 .text.avr-libc
                0x00003eaa      0x20a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x00003eaa                malloc
                0x00004004                free
 .text.avr-libc
                0x000040b4        0xe c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                0x000040b4                memset
                0x000040c2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000040c2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000040c2                exit
                0x000040c2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000040c2        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000040c6                _etext = .

.data           0x00800060       0xf8 load address 0x000040c6
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060       0xce main.o
 .data          0x0080012e       0x14 FAT32.o
 .data          0x00800142        0x0 LCD_routines.o
 .data          0x00800142        0x4 pcm_sample.o
                0x00800142                pcm_length
 .data          0x00800146        0x0 PWM_routines.o
 .data          0x00800146        0x0 SD_routines.o
 .data          0x00800146        0x0 SPI_routines.o
 .data          0x00800146        0xb UART_routines.o
 .data          0x00800151        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .data          0x00800151        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800151        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800151        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800151        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800151        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
 .data          0x00800151        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
 .data          0x00800151        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
 .data          0x00800151        0x6 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x00800153                __malloc_heap_start
                0x00800155                __malloc_heap_end
                0x00800151                __malloc_margin
 .data          0x00800157        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800158                . = ALIGN (0x2)
 *fill*         0x00800157        0x1 00
                0x00800158                _edata = .
                0x00800158                PROVIDE (__data_end, .)

.bss            0x00800158      0x252
                0x00800158                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800158        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800158        0x0 main.o
 .bss           0x00800158        0x0 FAT32.o
 .bss           0x00800158        0x0 LCD_routines.o
 .bss           0x00800158        0x0 pcm_sample.o
 .bss           0x00800158        0x0 PWM_routines.o
 .bss           0x00800158        0x0 SD_routines.o
 .bss           0x00800158        0x0 SPI_routines.o
 .bss           0x00800158        0x0 UART_routines.o
 .bss           0x00800158        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_mulsi3.o)
 .bss           0x00800158        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800158        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800158        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800158        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00800158        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(fdevopen.o)
 .bss           0x00800158        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
 .bss           0x00800158        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(calloc.o)
 .bss           0x00800158        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
 .bss           0x00800158        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800158      0x248 main.o
                0x00800158                STOPPED
                0x00800159                appendFileLocation
                0x0080015d                firstDataSector
                0x00800161                fileSize
                0x00800165                bytesPerSector
                0x00800167                totalClusters
                0x0080016b                rootCluster
                0x0080016f                startBlock
                0x00800173                buffer
                0x00800373                sectorPerCluster
                0x00800375                unusedSectors
                0x00800379                SDHC_flag
                0x0080037a                totalBlocks
                0x0080037e                reservedSectorCount
                0x00800380                appendStartCluster
                0x00800384                cardType
                0x00800385                CURR_FILE
                0x00800390                freeClusterCountUpdated
                0x00800391                appendFileSector
                0x00800395                PLAY_FILE
 COMMON         0x008003a0        0x6 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
                0x008003a0                __iob
 COMMON         0x008003a6        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(malloc.o)
                0x008003a6                __brkval
                0x008003a8                __flp
                0x008003aa                PROVIDE (__bss_end, .)
                0x000040c6                __data_load_start = LOADADDR (.data)
                0x000041be                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008003aa        0x0
                0x008003aa                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008003aa                PROVIDE (__noinit_end, .)
                0x008003aa                _end = .
                0x008003aa                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xe0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 FAT32.o
 .debug_aranges
                0x00000040       0x20 LCD_routines.o
 .debug_aranges
                0x00000060       0x20 PWM_routines.o
 .debug_aranges
                0x00000080       0x20 SD_routines.o
 .debug_aranges
                0x000000a0       0x20 SPI_routines.o
 .debug_aranges
                0x000000c0       0x20 UART_routines.o

.debug_pubnames
                0x00000000      0x657
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x1b8 main.o
 .debug_pubnames
                0x000001b8      0x242 FAT32.o
 .debug_pubnames
                0x000003fa       0x7a LCD_routines.o
 .debug_pubnames
                0x00000474       0x31 pcm_sample.o
 .debug_pubnames
                0x000004a5       0x2c PWM_routines.o
 .debug_pubnames
                0x000004d1       0xb2 SD_routines.o
 .debug_pubnames
                0x00000583       0x40 SPI_routines.o
 .debug_pubnames
                0x000005c3       0x94 UART_routines.o

.debug_info     0x00000000     0x2299
 *(.debug_info)
 .debug_info    0x00000000      0x7f6 main.o
 .debug_info    0x000007f6     0x1007 FAT32.o
 .debug_info    0x000017fd      0x264 LCD_routines.o
 .debug_info    0x00001a61       0xa3 pcm_sample.o
 .debug_info    0x00001b04       0x96 PWM_routines.o
 .debug_info    0x00001b9a      0x290 SD_routines.o
 .debug_info    0x00001e2a       0xc6 SPI_routines.o
 .debug_info    0x00001ef0      0x3a9 UART_routines.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x9b6
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x26d main.o
 .debug_abbrev  0x0000026d      0x238 FAT32.o
 .debug_abbrev  0x000004a5      0x100 LCD_routines.o
 .debug_abbrev  0x000005a5       0x5d pcm_sample.o
 .debug_abbrev  0x00000602       0x63 PWM_routines.o
 .debug_abbrev  0x00000665       0xbf SD_routines.o
 .debug_abbrev  0x00000724       0x8d SPI_routines.o
 .debug_abbrev  0x000007b1      0x205 UART_routines.o

.debug_line     0x00000000     0x1a88
 *(.debug_line)
 .debug_line    0x00000000      0x552 main.o
 .debug_line    0x00000552      0xb64 FAT32.o
 .debug_line    0x000010b6      0x24b LCD_routines.o
 .debug_line    0x00001301       0x51 pcm_sample.o
 .debug_line    0x00001352       0x9b PWM_routines.o
 .debug_line    0x000013ed      0x399 SD_routines.o
 .debug_line    0x00001786       0xc3 SPI_routines.o
 .debug_line    0x00001849      0x23f UART_routines.o

.debug_frame    0x00000000      0x310
 *(.debug_frame)
 .debug_frame   0x00000000       0x60 main.o
 .debug_frame   0x00000060       0xe0 FAT32.o
 .debug_frame   0x00000140       0x70 LCD_routines.o
 .debug_frame   0x000001b0       0x30 PWM_routines.o
 .debug_frame   0x000001e0       0x60 SD_routines.o
 .debug_frame   0x00000240       0x40 SPI_routines.o
 .debug_frame   0x00000280       0x90 UART_routines.o

.debug_str      0x00000000      0x97a
 *(.debug_str)
 .debug_str     0x00000000      0x2dd main.o
                                0x325 (size before relaxing)
 .debug_str     0x000002dd      0x45e FAT32.o
                                0x713 (size before relaxing)
 .debug_str     0x0000073b       0x6f LCD_routines.o
                                0x15d (size before relaxing)
 .debug_str     0x000007aa       0x46 pcm_sample.o
                                 0xb9 (size before relaxing)
 .debug_str     0x000007f0       0x29 PWM_routines.o
                                 0xbb (size before relaxing)
 .debug_str     0x00000819       0x6c SD_routines.o
                                0x141 (size before relaxing)
 .debug_str     0x00000885       0x34 SPI_routines.o
                                 0xcb (size before relaxing)
 .debug_str     0x000008b9       0xc1 UART_routines.o
                                0x17f (size before relaxing)

.debug_loc      0x00000000     0x181a
 *(.debug_loc)
 .debug_loc     0x00000000      0x370 main.o
 .debug_loc     0x00000370      0xf4d FAT32.o
 .debug_loc     0x000012bd       0xc6 LCD_routines.o
 .debug_loc     0x00001383       0x18 PWM_routines.o
 .debug_loc     0x0000139b      0x2e7 SD_routines.o
 .debug_loc     0x00001682       0x26 SPI_routines.o
 .debug_loc     0x000016a8      0x172 UART_routines.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(AP_Ver2.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0xc0
 .debug_ranges  0x00000000       0x90 main.o
 .debug_ranges  0x00000090       0x30 UART_routines.o
